@article{ocamlpatternmatch,
	author = {Le Fessant, Fabrice and Maranget, Luc},
	title = {Optimizing Pattern Matching},
	year = {2001},
	issue_date = {October 2001},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {36},
	number = {10},
	issn = {0362-1340},
	//url = {https://doi.org/10.1145/507669.507641},
	doi = {10.1145/507669.507641},
	abstract = {We present improvements to the backtracking technique of pattern-matching compilation. Several optimizations are introduced, such as commutation of patterns, use of exhaustiveness information, and control flow optimization through the use of labeled static exceptions and context information. These optimizations have been integrated in the Objective-Caml compiler. They have shown good results in increasing the speed of pattern-matching intensive programs, without increasing final code size.},
	journal = {SIGPLAN Not.},
	month = oct,
	pages = {26–37},
	numpages = {12}
}

@misc{titanium,
author = {Bonachea, Dan},
year = {2001},
month = {09},
pages = {},
title = {Method Inlining in the Titanium Compiler},
url={http://titanium.cs.berkeley.edu/papers/bonachea-method-inlining.pdf},
urldate = {2021-01-09}
}

@inproceedings{decisiontrees,
author = {Maranget, Luc},
title = {Compiling Pattern Matching to Good Decision Trees},
year = {2008},
isbn = {9781605580623},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
//url = {https://doi.org/10.1145/1411304.1411311},
doi = {10.1145/1411304.1411311},
abstract = {We address the issue of compiling ML pattern matching to compact and efficient decisions trees. Traditionally, compilation to decision trees is optimized by (1) implementing decision trees as dags with maximal sharing; (2) guiding a simple compiler with heuristics. We first design new heuristics that are inspired by necessity, a concept from lazy pattern matching that we rephrase in terms of decision tree semantics. Thereby, we simplify previous semantic frameworks and demonstrate a straightforward connection between necessity and decision tree runtime efficiency. We complete our study by experiments, showing that optimizing compilation to decision trees is competitive with the optimizing match compiler of Le Fessant and Maranget (2001).},
booktitle = {Proceedings of the 2008 ACM SIGPLAN Workshop on ML},
pages = {35–46},
numpages = {12},
keywords = {heuristics, decision trees, match compilers},
location = {Victoria, BC, Canada},
series = {ML '08}
}

@book{k_and_r,
author = {Kernighan, Brian W. and Ritchie, Dennis M.},
title = {The C Programming Language},
year = {1988},
isbn = {0131103709},
publisher = {Prentice Hall Professional Technical Reference},
edition = {2nd},
abstract = {From the Publisher: This second editon describes C as defined by the ANSI standard. This book is meant to help the reader learn how to program in C. The book assumes some familiarity with basic programming concepts like variables, assignment statements, loops, and functions. A novice programmer should be able to read along and pick up the language. FEATURES: All examples have been tested, which is in machine-readable form. It discusses various aspects of C in more detail, although the emphasis is on examples of complete programs, rather than isolated fragments. It deals with basic data types, operators and expressions. Covers functions and program structure, external variables, scope rules, multiple source files, and also touches on the preprocessor. It also describes an interface between C programs and the UNIX operating system, concentrating on input/output, the file system, and storage allocation. It also provides a language reference manual. The official statement of the syntax and semantics of C is the ANSI standard.}
}

@misc{99-problems, 
 title={99 Problems in OCaml}, url={https://ocaml.org/learn/tutorials/99problems.html}, urldate = {2020-11-07}} 


@misc{chris00, 
  title={ocaml-benchmark}, url={https://github.com/Chris00/ocaml-benchmark}, author={Christophe Troestler}, urldate = {2021-02-15}} 
  
@misc{benchmark-game,
 title={The Computer Language Benchmarks Game}, 
 url={https://salsa.debian.org/benchmarksgame-team/benchmarksgame/}, journal={GitLab}, urldate = {2021-02-15}} 
 
 @misc{searchfox,
 title={Searchfox indexing tool for Mozilla source code},
 url={https://searchfox.org/mozilla-central/source/js/src/wasm},
 urldate={2021-03-15}}
 
 @misc{v8,
 title={V8 JavaScript engine},
 url={https://github.com/v8/v8/blob/master/src/wasm},
 urldate={2021-03-15}}
 
  @misc{timing,
 title={High Resolution Time},
 author = {Grigorik, Ilya},
 url={https://www.w3.org/TR/hr-time-3/},
 urldate={2021-02-15}}
 
 @misc{jsofocaml,
 title={Js\_of\_ocaml},
 url={https://ocsigen.org/js_of_ocaml},
 urldate={2021-03-20}
 }
 
 @misc{langauges-to-wasm,
 title={A list of languages that compile to or have their VMs in WebAssembly},
 author={Akinyemi, Steve},
 url={https://github.com/appcypher/awesome-wasm-langs},
 urldate={2020-10-18}}
 
 @misc{IB-compilers,
 title={Compiler Construction},
 author={Griffin, Timothy},
 url={https://www.cl.cam.ac.uk/teaching/1920/CompConstr},
 urldate={2021-03-24}
 }
 
  @misc{optimising-compilers,
 title={Compiler Construction},
 author={Jones, Timothy},
 url={https://www.cl.cam.ac.uk/teaching/2021/OptComp},
 urldate={2021-03-24}
 }
 
 @mics{ocaml,
 title={The core OCaml system: compilers, runtime system, base libraries},
 url={https://github.com/ocaml/ocaml},
 urldate={2021-03-24}}
 
 @misc{grain,
 title={Grain},
 url={https://grain-lang.org},
 urldate={2021-03-24}}
 
 @misc{ounit,
 title={OUnit - unit testing framework for OCaml},
 url={https://github.com/gildor478/ounit},
 urldate={2020-11-07}}
 
 
 @article{uncurry,
    author = {Bloss, A. and Hudak, P. and Young, J.},
    title = "{An Optimising Compiler for a Modern Functional Language}",
    journal = {The Computer Journal},
    volume = {32},
    number = {2},
    pages = {152-161},
    year = {1989},
    month = {01},
    abstract = "{One of the factor hindering the use of functional languages has been their relatively poor performance in comparison to more traditional languages such as C and Pascal. During the last decade tremendous progress has been made in building implementations of functional languages but the approaches adopted have employed specialist hardware and/or compiler optimisations that have been developed specifically for functional languages. Building specialist hardware may be the best long-term solution but in the short run it is possible to increase the use and acceptance of functional languages by exploiting the performance of commercially available machines. The goal of the project described in this paper has been to design an optimising compiler that produces fast code for functional languages on conventional sequential and parallel machines.}",
    issn = {0010-4620},
    doi = {10.1093/comjnl/32.2.152},
    url = {https://doi.org/10.1093/comjnl/32.2.152},
    eprint = {https://academic.oup.com/comjnl/article-pdf/32/2/152/1445715/320152.pdf},
}


@misc{wasm,
title={WebAssembly Specification},
author={Rossberg, Andreas},
url={https://webassembly.github.io/spec/core/},
urldate={2020-10-18}}

 @misc{wasm-article,
title={Creating a WebAssembly module instance with JavaScript},
author={Clark, Lin},
url={https://hacks.mozilla.org/2017/07/creating-a-webassembly-module-instance-with-javascript/},
urldate={2021-01-23}}

@misc{stdlib,
title={The OCaml Standard library},
url={https://ocaml.org/api/Stdlib.html},
urldate={2021-03-27}}

@misc{clang-llvm,
title={Write Web Assembly With LLVM},
author={Anaya, Richard},
url={https://richardanaya.medium.com/write-web-assembly-with-llvm-fbee788b2817},
urldate={2021-04-10}}


@misc{wasm-exceptions,
title={C++ exceptions support},
url={https://emscripten.org/docs/porting/exceptions.html},
urldate={2021-04-10}}


@article{shadow-stack,
   title={SoK: Shining Light on Shadow Stacks},
   ISBN={9781538666609},
   url={http://dx.doi.org/10.1109/SP.2019.00076},
   DOI={10.1109/sp.2019.00076},
   journal={2019 IEEE Symposium on Security and Privacy (SP)},
   publisher={IEEE},
   author={Burow, Nathan and Zhang, Xinping and Payer, Mathias},
   year={2019},
   month={May}
}

@misc{jira,
title={Jira Software},
url={https://www.atlassian.com/software/jira},
urldate={2021-04-10}}

@book{kanban,
 place={Sequim},
 title={Kanban : successful evolutionary change in your technology business},
  publisher={Blue Hole Press},
   author={Anderson, David J},
   year={2010}}





